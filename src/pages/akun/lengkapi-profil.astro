---
// File: src/pages/akun/lengkapi-profil.astro
// Perbaikan: Menambahkan logika polling untuk memastikan profil siap sebelum redirect.

import MainLayout from '@/layouts/MainLayout.astro';

// Proteksi Halaman
const { session } = Astro.locals;
if (!session) {
  return Astro.redirect('/login');
}
---

<MainLayout title="Lengkapi Profil - BJS Racing Store">
  <div class="container mx-auto max-w-md px-4 py-16">
    <h1 class="text-3xl font-bold text-center mb-2">Selamat Datang!</h1>
    <p class="text-center text-slate-600 mb-8">Satu langkah lagi. Mohon lengkapi profil Anda.</p>

    <form id="profile-form" class="space-y-4 bg-white p-6 rounded-lg shadow-md">
      <div>
        <label for="nama_pelanggan" class="block text-sm font-medium text-gray-700">Nama Lengkap</label>
        <input type="text" id="nama_pelanggan" name="nama_pelanggan" required class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm p-2 focus:ring-orange-500 focus:border-orange-500">
      </div>

      <div>
        <label for="telepon" class="block text-sm font-medium text-gray-700">Nomor Telepon (WhatsApp)</label>
        <input type="tel" id="telepon" name="telepon" required class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm p-2 focus:ring-orange-500 focus:border-orange-500">
      </div>

      <button type="submit" id="submit-btn" class="w-full bg-orange-500 text-white font-bold py-2 px-4 rounded-lg hover:bg-orange-600 transition-opacity disabled:opacity-50">
        Simpan Profil & Lanjutkan
      </button>
      
      {/* PERBAIKAN: Tambahkan elemen untuk status dan error message */}
      <p id="form-status" class="text-blue-600 text-sm mt-2 text-center h-4"></p>
      <p id="form-error" class="text-red-500 text-sm mt-2 text-center h-4"></p>
    </form>
  </div>
</MainLayout>

<script>
  // Ambil elemen DOM
  const form = document.getElementById('profile-form') as HTMLFormElement;
  const errorMsg = document.getElementById('form-error') as HTMLParagraphElement;
  const statusMsg = document.getElementById('form-status') as HTMLParagraphElement;
  const submitBtn = document.getElementById('submit-btn') as HTMLButtonElement;

  /**
   * Fungsi polling yang memeriksa ke server apakah profil sudah bisa dibaca.
   * @returns {Promise<void>} - Resolve jika profil ditemukan, reject jika timeout.
   */
  function pollForProfile(): Promise<void> {
    return new Promise((resolve, reject) => {
      let attempts = 0;
      const maxAttempts = 10; // Coba maksimal 10 kali (total 5 detik)
      const interval = 500; // Coba setiap 500ms (setengah detik)

      const checker = setInterval(async () => {
        attempts++;
        try {
          // Panggil API verifikasi profil yang baru kita buat
          const checkResponse = await fetch('/api/profile-check');
          if (checkResponse.ok) {
            const result = await checkResponse.json();
            if (result.found) {
              clearInterval(checker);
              resolve(); // Profil ditemukan, Promise selesai!
              return;
            }
          }
        } catch (err) {
          // Abaikan error fetch individual, terus coba lagi
          console.warn(`Polling attempt ${attempts} failed, retrying...`);
        }

        // Jika sudah melebihi batas percobaan, gagalkan proses
        if (attempts >= maxAttempts) {
          clearInterval(checker);
          reject(new Error("Gagal memverifikasi profil setelah disimpan. Silakan coba login kembali."));
        }
      }, interval);
    });
  }

  // Event listener untuk submit form
  form.addEventListener('submit', async (e) => {
    e.preventDefault();
    errorMsg.textContent = '';
    statusMsg.textContent = '';
    submitBtn.disabled = true;
    submitBtn.textContent = 'Menyimpan...';

    const formData = new FormData(form);
    const data = Object.fromEntries(formData.entries());

    try {
      // Langkah 1: Simpan profil ke database
      const response = await fetch('/api/customers', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(data)
      });

      if (!response.ok) {
        const errorData = await response.json();
        throw new Error(errorData.message || 'Gagal menyimpan profil ke server.');
      }
      
      // Beri feedback ke pengguna bahwa penyimpanan berhasil
      statusMsg.textContent = 'Profil berhasil disimpan. Memverifikasi data...';
      
      // Langkah 2: Tunggu sampai database siap dengan melakukan polling
      await pollForProfile();
      
      // Langkah 3: Arahkan ke halaman akun HANYA setelah verifikasi berhasil
      window.location.href = '/akun';

    } catch (error) {
      // Tangani semua kemungkinan error (dari save atau dari polling)
      console.error('Gagal dalam proses melengkapi profil:', error);
      statusMsg.textContent = '';
      errorMsg.textContent = (error as Error).message;
      submitBtn.disabled = false;
      submitBtn.textContent = 'Simpan Profil & Lanjutkan';
    }
  });
</script>