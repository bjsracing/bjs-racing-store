---
// File: src/pages/akun/index.astro
// Perbaikan Final: Mengaktifkan kembali validasi profil di sisi server
// untuk memastikan halaman hanya dimuat jika data pengguna sudah siap.

import MainLayout from '@/layouts/MainLayout.astro';
import AddressSection from '@/components/AddressSection.tsx';
import { createServerClient, type CookieOptions } from '@supabase/ssr';

let pageError: string | null = null;
let showContent = true;

try {
  // --- Validasi Sesi Pengguna ---
  const { session, cookies } = Astro.locals; 

  if (!session) {
    // Jika tidak ada sesi, langsung arahkan ke login
    return Astro.redirect('/login?redirect=/akun');
  }

  // --- PERBAIKAN UTAMA: Validasi Profil Diaktifkan Kembali ---
  // Kita buat koneksi Supabase di sisi server untuk memeriksa profil
  const supabase = createServerClient(
    import.meta.env.PUBLIC_SUPABASE_URL!,
    import.meta.env.PUBLIC_SUPABASE_ANON_KEY!,
    {
      cookies: {
        get(key: string) { return cookies.get(key)?.value; },
        set(key: string, value: string, options: CookieOptions) { cookies.set(key, value, options); },
        remove(key: string, options: CookieOptions) { cookies.delete(key, options); },
      },
    }
  );

  // Periksa keberadaan profil di database sebelum merender halaman
  const { data: customerProfile, error: profileError } = await supabase
    .from("customers")
    .select("id", { count: 'exact', head: true }) // Query lebih efisien, hanya cek keberadaan
    .eq("auth_user_id", session.user.id);

  if (profileError) {
    // Jika ada error database, lempar untuk ditangani di bawah
    throw profileError;
  }

  // Jika hitungan profil adalah 0, berarti profil belum ada.
  // Arahkan paksa ke halaman lengkapi profil. Ini menyelesaikan race condition.
  if (customerProfile?.count === 0) {
    return Astro.redirect('/akun/lengkapi-profil');
  }

} catch (error) {
  console.error("Server-side error in /akun/index.astro:", error.message);
  pageError = error.message || "Terjadi kesalahan saat memverifikasi data pengguna.";
  showContent = false; // Sembunyikan konten utama jika ada error
}
---

<MainLayout title="Akun Saya - BJS Racing Store">
  <main class="container mx-auto px-4 py-8">
    {pageError ? (
      <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-6" role="alert">
        <strong class="font-bold">Error Memuat Halaman:</strong>
        <span class="block sm:inline">{pageError}</span>
      </div>
    ) : (
      <div class="grid grid-cols-1 md:grid-cols-4 gap-8">
        <aside class="md:col-span-1">
          <nav class="flex flex-col space-y-2">
            <a href="/akun" class="font-semibold bg-gray-200 p-3 rounded-lg">Buku Alamat</a>
            <a href="/akun/profil" class="hover:bg-gray-100 p-3 rounded-lg">Profil Saya</a>
            <a href="/akun/pesanan" class="hover:bg-gray-100 p-3 rounded-lg">Riwayat Pesanan</a>
            <form action="/api/auth/signout" method="post" class="w-full">
              <button type="submit" class="w-full text-left hover:bg-gray-100 p-3 rounded-lg">Keluar</button>
            </form>
          </nav>
        </aside>
        <section class="md:col-span-3">
          <AddressSection client:load />
        </section>
      </div>
    )}
  </main>
</MainLayout>