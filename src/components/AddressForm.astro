---
// src/components/AddressForm.astro
---

<div id="address-modal" class="fixed inset-0 bg-black bg-opacity-60 z-50 hidden flex items-center justify-center p-4">
  <div id="modal-content" class="bg-white rounded-lg shadow-xl w-full max-w-lg transform transition-all">
    <div class="p-6">
      <div class="flex justify-between items-center pb-3">
        <h3 id="modal-title" class="text-xl font-bold">Tambah Alamat Baru</h3>
        <button id="close-modal-btn" class="text-gray-400 hover:text-gray-800 text-3xl leading-none">&times;</button>
      </div>
      
      <div class="max-h-[70vh] overflow-y-auto pr-2">
        <form id="address-form" novalidate>
          <div class="space-y-4">
            
            <div>
              <label for="label" class="block text-sm font-medium text-gray-700">Label Alamat</label>
              <input type="text" id="label" name="label" placeholder="Contoh: Rumah, Kantor" class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm p-2 focus:ring-orange-500 focus:border-orange-500">
            </div>

            <div>
              <label for="recipient_name" class="block text-sm font-medium text-gray-700">Nama Penerima</label>
              <input type="text" id="recipient_name" name="recipient_name" required class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm p-2 focus:ring-orange-500 focus:border-orange-500">
            </div>

            <div>
              <label for="recipient_phone" class="block text-sm font-medium text-gray-700">Nomor Telepon</label>
              <input type="tel" id="recipient_phone" name="recipient_phone" required class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm p-2 focus:ring-orange-500 focus:border-orange-500">
            </div>
            
            <div class="relative" id="city-wrapper">
              <input type="hidden" id="destination" name="destination" required>
              <label for="city-search" class="block text-sm font-medium text-gray-700">Kota / Kabupaten / Kecamatan</label>
              <input type="text" id="city-search" autocomplete="off" placeholder="Ketik min. 3 huruf (misal: Bandung)" class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm p-2 focus:ring-orange-500 focus:border-orange-500">
              <div id="city-results" class="absolute z-10 mt-1 max-h-60 w-full overflow-auto rounded-md bg-white py-1 text-base shadow-lg ring-1 ring-black ring-opacity-5 hidden">
                </div>
            </div>
            
            <div>
              <label for="full_address" class="block text-sm font-medium text-gray-700">Alamat Lengkap</label>
              <textarea id="full_address" name="full_address" rows="3" required placeholder="Nama jalan, nomor rumah, RT/RW" class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm p-2 focus:ring-orange-500 focus:border-orange-500"></textarea>
            </div>

            <div>
              <label for="postal_code" class="block text-sm font-medium text-gray-700">Kode Pos</label>
              <input type="text" id="postal_code" name="postal_code" class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm p-2 focus:ring-orange-500 focus:border-orange-500">
            </div>
          </div>
        </form>
      </div>
    </div>
    
    <div class="bg-gray-50 px-6 py-4 flex justify-end space-x-3 rounded-b-lg">
      <button type="button" id="cancel-btn" class="bg-gray-200 text-gray-700 font-semibold px-4 py-2 rounded-md hover:bg-gray-300">Batal</button>
      <button type="submit" form="address-form" id="submit-btn" class="bg-orange-500 text-white font-bold px-4 py-2 rounded-md hover:bg-orange-600 transition-opacity disabled:opacity-50">Simpan Alamat</button>
    </div>
    <p id="form-error" class="text-red-500 text-sm p-6 pt-0"></p>
  </div>
</div>

<script>
    const modal = document.getElementById('address-modal');
    const modalTitle = document.getElementById('modal-title');
    const form = document.getElementById('address-form');
    const closeModalBtn = document.getElementById('close-modal-btn');
    const cancelBtn = document.getElementById('cancel-btn');
    const errorMsg = document.getElementById('form-error');
    const submitBtn = document.getElementById('submit-btn');

    // === Referensi Elemen Autocomplete Kustom ===
    const cityWrapper = document.getElementById('city-wrapper');
    const citySearchInput = document.getElementById('city-search');
    const cityHiddenInput = document.getElementById('destination');
    const cityResultsContainer = document.getElementById('city-results');
    
    let currentMode = 'add';
    let addressIdToEdit = null;
    let debounceTimer;

    // === Logika Modal ===
    const showModal = () => modal.classList.remove('hidden');
    const hideModal = () => {
        modal.classList.add('hidden');
        form.reset();
        errorMsg.textContent = '';
        cityResultsContainer.classList.add('hidden');
        cityResultsContainer.innerHTML = '';
    };
    closeModalBtn.addEventListener('click', hideModal);
    cancelBtn.addEventListener('click', hideModal);

    // === Logika Autocomplete ===
    function debounce(func, delay = 500) {
      return (...args) => {
        clearTimeout(debounceTimer);
        debounceTimer = setTimeout(() => {
          func.apply(this, args);
        }, delay);
      };
    }

    const searchCities = async (query) => {
      cityResultsContainer.innerHTML = '<div class="p-2 text-gray-500">Mencari...</div>';
      cityResultsContainer.classList.remove('hidden');
      try {
        const response = await fetch(`/api/rajaongkir/search-city?query=${encodeURIComponent(query)}`);
        if (!response.ok) throw new Error('Gagal mencari kota.');
        const results = await response.json();
        
        cityResultsContainer.innerHTML = '';
        if (results.length === 0) {
            cityResultsContainer.innerHTML = '<div class="p-2 text-gray-500">Tidak ditemukan.</div>';
            return;
        }

        results.forEach(city => {
          const div = document.createElement('div');
          div.className = 'text-gray-900 relative cursor-pointer select-none py-2 px-4 hover:bg-orange-500 hover:text-white';
          div.textContent = `${city.subdistrict_name}, ${city.city}, ${city.province}`;
          div.dataset.value = city.subdistrict_id;
          div.dataset.text = div.textContent;
          cityResultsContainer.appendChild(div);
        });
      } catch (error) {
          console.error(error);
          cityResultsContainer.innerHTML = `<div class="p-2 text-red-500">${error.message}</div>`;
      }
    };

    citySearchInput.addEventListener('input', debounce((e) => {
      const query = e.target.value;
      if (query.length < 3) {
        cityResultsContainer.classList.add('hidden');
        cityResultsContainer.innerHTML = '';
        cityHiddenInput.value = ''; // Kosongkan ID jika input di bawah 3 huruf
        return;
      }
      searchCities(query);
    }));

    cityResultsContainer.addEventListener('click', (e) => {
      const target = e.target;
      if (target.dataset.value) {
        citySearchInput.value = target.dataset.text;
        cityHiddenInput.value = target.dataset.value;
        cityResultsContainer.classList.add('hidden');
      }
    });

    // Sembunyikan hasil jika klik di luar
    document.addEventListener('click', (e) => {
        if (!cityWrapper.contains(e.target)) {
            cityResultsContainer.classList.add('hidden');
        }
    });

    // === Logika Utama Form ===
    document.addEventListener('showAddressForm', (e) => {
        const { mode, address } = e.detail;
        currentMode = mode;
        form.reset();
        
        if (mode === 'edit') {
            modalTitle.textContent = 'Ubah Alamat';
            addressIdToEdit = address.id;
            
            form.elements['label'].value = address.label || '';
            form.elements['recipient_name'].value = address.recipient_name || '';
            form.elements['recipient_phone'].value = address.recipient_phone || '';
            form.elements['full_address'].value = address.full_address || '';
            form.elements['postal_code'].value = address.postal_code || '';
            
            // Untuk edit, kita minta user untuk mencari ulang kotanya demi akurasi data ongkir
            citySearchInput.placeholder = "Ketik untuk mencari kota/kecamatan baru";
            cityHiddenInput.value = address.destination || ''; // Gunakan ID lama jika ada

        } else {
            modalTitle.textContent = 'Tambah Alamat Baru';
            addressIdToEdit = null;
        }
        showModal();
    });

    form.addEventListener('submit', async (e) => {
      e.preventDefault();
      errorMsg.textContent = '';
      submitBtn.disabled = true;
      submitBtn.textContent = 'Menyimpan...';

      const formData = new FormData(form);
      const data = Object.fromEntries(formData.entries());

      const method = currentMode === 'add' ? 'POST' : 'PUT';
      if (currentMode === 'edit') {
        data.id = addressIdToEdit;
      }
       if (!data.destination) {
        errorMsg.textContent = 'Kota/Kabupaten/Kecamatan harus dipilih dari hasil pencarian.';
        submitBtn.disabled = false;
        submitBtn.textContent = 'Simpan Alamat';
        return;
      }

      try {
        const response = await fetch('/api/addresses', {
          method: method,
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify(data)
        });

        if (!response.ok) throw new Error('Gagal menyimpan alamat.');

        hideModal();
        document.dispatchEvent(new CustomEvent('addressSaved'));

      } catch (error) {
        errorMsg.textContent = error.message;
      } finally {
        submitBtn.disabled = false;
        submitBtn.textContent = 'Simpan Alamat';
      }
    });
</script>