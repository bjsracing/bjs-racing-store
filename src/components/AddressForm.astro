---
// src/components/AddressForm.astro
---

<div id="address-modal" class="fixed inset-0 bg-black bg-opacity-50 z-40 hidden items-center justify-center">
  <div id="modal-content" class="bg-white rounded-lg shadow-xl p-6 w-full max-w-lg m-4 max-h-[90vh] overflow-y-auto">
    <div class="flex justify-between items-center mb-4">
      <h3 id="modal-title" class="text-xl font-bold">Tambah Alamat Baru</h3>
      <button id="close-modal-btn" class="text-gray-500 hover:text-gray-800 text-2xl">&times;</button>
    </div>
    
    <form id="address-form">
      <div class="space-y-4">
        <div>
          <label for="label" class="block text-sm font-medium text-gray-700">Label Alamat (Contoh: Rumah, Kantor)</label>
          <input type="text" id="label" name="label" class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm p-2">
        </div>

        <div>
          <label for="recipient_name" class="block text-sm font-medium text-gray-700">Nama Penerima</label>
          <input type="text" id="recipient_name" name="recipient_name" required class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm p-2">
        </div>

        <div>
          <label for="recipient_phone" class="block text-sm font-medium text-gray-700">Nomor Telepon</label>
          <input type="tel" id="recipient_phone" name="recipient_phone" required class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm p-2">
        </div>
        
        <div>
            <label for="province" class="block text-sm font-medium text-gray-700">Provinsi</label>
            <select id="province" name="province_id" required class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm p-2">
                <option>Memuat provinsi...</option>
            </select>
        </div>
        <div>
            <label for="city" class="block text-sm font-medium text-gray-700">Kota/Kabupaten</label>
            <select id="city" name="city_id" required disabled class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm p-2 bg-gray-100">
                <option>Pilih provinsi terlebih dahulu</option>
            </select>
        </div>

        <div>
          <label for="full_address" class="block text-sm font-medium text-gray-700">Alamat Lengkap</label>
          <textarea id="full_address" name="full_address" rows="3" required class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm p-2"></textarea>
        </div>

        <div>
          <label for="postal_code" class="block text-sm font-medium text-gray-700">Kode Pos</label>
          <input type="text" id="postal_code" name="postal_code" class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm p-2">
        </div>

      </div>
      
      <div class="mt-6 flex justify-end space-x-3">
        <button type="button" id="cancel-btn" class="bg-gray-200 px-4 py-2 rounded-md hover:bg-gray-300">Batal</button>
        <button type="submit" id="submit-btn" class="bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700">Simpan Alamat</button>
      </div>
      <p id="form-error" class="text-red-500 text-sm mt-2"></p>
    </form>
  </div>
</div>

<script>
    const modal = document.getElementById('address-modal');
    const modalTitle = document.getElementById('modal-title');
    const form = document.getElementById('address-form') as HTMLFormElement;
    const closeModalBtn = document.getElementById('close-modal-btn');
    const cancelBtn = document.getElementById('cancel-btn');
    const errorMsg = document.getElementById('form-error');
    const provinceSelect = document.getElementById('province') as HTMLSelectElement;
    const citySelect = document.getElementById('city') as HTMLSelectElement;

    // Variabel untuk menyimpan state formulir
    let currentMode = 'add';
    let addressIdToEdit = null;

    // Fungsi dasar untuk menampilkan/menyembunyikan modal
    const showModal = () => modal.classList.remove('hidden');
    const hideModal = () => {
        modal.classList.add('hidden');
        form.reset();
        errorMsg.textContent = '';
        citySelect.innerHTML = '<option>Pilih provinsi terlebih dahulu</option>';
        citySelect.disabled = true;
    };
    
    closeModalBtn.addEventListener('click', hideModal);
    cancelBtn.addEventListener('click', hideModal);

    // Event listener pintar yang menangani mode 'tambah' dan 'ubah'
    document.addEventListener('showAddressForm', async (e: CustomEvent) => {
        const { mode, address } = e.detail;
        currentMode = mode;
        form.reset();
        
        if (mode === 'edit') {
            modalTitle.textContent = 'Ubah Alamat';
            addressIdToEdit = address.id;

            // Isi form dengan data yang ada
            form.elements['label'].value = address.label || '';
            form.elements['recipient_name'].value = address.recipient_name || '';
            form.elements['recipient_phone'].value = address.recipient_phone || '';
            form.elements['full_address'].value = address.full_address || '';
            form.elements['postal_code'].value = address.postal_code || '';
            
            // Isi dropdown provinsi, lalu tunggu & isi dropdown kota
            await fetchProvinces();
            provinceSelect.value = address.province_id;
            await fetchCities(address.province_id);
            citySelect.value = address.city_id;

        } else { // mode 'add'
            modalTitle.textContent = 'Tambah Alamat Baru';
            addressIdToEdit = null;
            await fetchProvinces();
            fetchCities(null);
        }
        showModal();
    });

    // Fungsi untuk mengambil data Provinsi dari API Proxy kita
    async function fetchProvinces() {
      try {
        const response = await fetch('/api/rajaongkir/provinces');
        const { rajaongkir: { results } } = await response.json();
        
        provinceSelect.innerHTML = '<option value="">Pilih Provinsi</option>';
        results.forEach(province => {
          const option = document.createElement('option');
          option.value = province.province_id;
          option.textContent = province.province;
          provinceSelect.appendChild(option);
        });
      } catch (error) {
        console.error("Gagal memuat provinsi:", error);
      }
    }

    // Fungsi untuk mengambil data Kota dari API Proxy kita
    async function fetchCities(provinceId) {
        if (!provinceId) {
            citySelect.innerHTML = '<option>Pilih provinsi terlebih dahulu</option>';
            citySelect.disabled = true;
            return;
        }
        citySelect.disabled = false;
        citySelect.innerHTML = '<option>Memuat kota...</option>';
        try {
            const response = await fetch(`/api/rajaongkir/cities?province=${provinceId}`);
            const { rajaongkir: { results } } = await response.json();

            citySelect.innerHTML = '<option value="">Pilih Kota/Kabupaten</option>';
            results.forEach(city => {
                const option = document.createElement('option');
                option.value = city.city_id;
                option.textContent = `${city.type} ${city.city_name}`;
                citySelect.appendChild(option);
            });
        } catch (error) {
            console.error("Gagal memuat kota:", error);
        }
    }
    
    provinceSelect.addEventListener('change', () => fetchCities(provinceSelect.value));

    // Logika Submit yang dinamis (bisa POST atau PUT)
    form.addEventListener('submit', async (e) => {
      e.preventDefault();
      errorMsg.textContent = '';
      const formData = new FormData(form);
      const data = Object.fromEntries(formData.entries());

      const method = currentMode === 'add' ? 'POST' : 'PUT';
      
      // Jika mode edit, tambahkan ID alamat ke data yang dikirim
      if (currentMode === 'edit') {
        data.id = addressIdToEdit;
      }

      try {
        const response = await fetch('/api/addresses', {
          method: method,
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify(data)
        });

        if (!response.ok) {
          throw new Error('Gagal menyimpan alamat. Periksa kembali data Anda.');
        }

        hideModal();
        document.dispatchEvent(new CustomEvent('addressSaved'));

      } catch (error) {
        console.error('Gagal menyimpan alamat:', error);
        errorMsg.textContent = error.message;
      }
    });
</script>