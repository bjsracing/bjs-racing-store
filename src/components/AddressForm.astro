---
// src/components/AddressForm.astro
// Tidak ada perubahan di bagian HTML/CSS. Perubahan hanya di <script>.
---

<div id="address-modal" class="fixed inset-0 bg-black bg-opacity-60 z-50 hidden flex items-center justify-center p-4">
  <div id="modal-content" class="bg-white rounded-lg shadow-xl w-full max-w-lg transform transition-all">
    <div class="p-6">
      <div class="flex justify-between items-center pb-3">
        <h3 id="modal-title" class="text-xl font-bold">Tambah Alamat Baru</h3>
        <button id="close-modal-btn" class="text-gray-400 hover:text-gray-800 text-3xl leading-none">&times;</button>
      </div>
      <div class="max-h-[70vh] overflow-y-auto pr-2">
        <form id="address-form" novalidate>
          <div class="space-y-4">
            <div>
              <label for="label" class="block text-sm font-medium text-gray-700">Label Alamat</label>
              <input type="text" id="label" name="label" placeholder="Contoh: Rumah, Kantor" class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm p-2 focus:ring-orange-500 focus:border-orange-500">
            </div>
            <div>
              <label for="recipient_name" class="block text-sm font-medium text-gray-700">Nama Penerima</label>
              <input type="text" id="recipient_name" name="recipient_name" required class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm p-2 focus:ring-orange-500 focus:border-orange-500">
            </div>
            <div>
              <label for="recipient_phone" class="block text-sm font-medium text-gray-700">Nomor Telepon</label>
              <input type="tel" id="recipient_phone" name="recipient_phone" required class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm p-2 focus:ring-orange-500 focus:border-orange-500">
            </div>
            <div class="relative" id="city-wrapper">
              <input type="hidden" id="destination" name="destination" required>
              <label for="city-search" class="block text-sm font-medium text-gray-700">Kota / Kabupaten / Kecamatan</label>
              <input type="text" id="city-search" name="destination_text" autocomplete="off" placeholder="Ketik min. 3 huruf (misal: Bandung)" class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm p-2 focus:ring-orange-500 focus:border-orange-500">
              <div id="city-results" class="absolute z-10 mt-1 max-h-60 w-full overflow-auto rounded-md bg-white py-1 text-base shadow-lg ring-1 ring-black ring-opacity-5 hidden"></div>
            </div>
            <div>
              <label for="full_address" class="block text-sm font-medium text-gray-700">Alamat Lengkap</label>
              <textarea id="full_address" name="full_address" rows="3" required placeholder="Nama jalan, nomor rumah, RT/RW" class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm p-2 focus:ring-orange-500 focus:border-orange-500"></textarea>
            </div>
            <div>
              <label for="postal_code" class="block text-sm font-medium text-gray-700">Kode Pos</label>
              <input type="text" id="postal_code" name="postal_code" class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm p-2 focus:ring-orange-500 focus:border-orange-500">
            </div>
          </div>
        </form>
      </div>
    </div>
    <div class="bg-gray-50 px-6 py-4 flex justify-end space-x-3 rounded-b-lg">
      <button type="button" id="cancel-btn" class="bg-gray-200 text-gray-700 font-semibold px-4 py-2 rounded-md hover:bg-gray-300">Batal</button>
      <button type="submit" form="address-form" id="submit-btn" class="bg-orange-500 text-white font-bold px-4 py-2 rounded-md hover:bg-orange-600 transition-opacity disabled:opacity-50">Simpan Alamat</button>
    </div>
    <p id="form-error" class="text-red-500 text-sm p-6 pt-0"></p>
  </div>
</div>

<script>
  // ==================================================================
  // == REFACTOR NANO STORES: Langkah 1                            ==
  // == Impor aksi 'addAddress' dari store terpusat.               ==
  // == Asumsi alias path tsconfig: "@/stores/*": ["src/stores/*"] ==
  // ==================================================================
  import { addAddress } from '@/stores/addressStore'; 

  // --- Elemen DOM ---
  const modal = document.getElementById('address-modal') as HTMLElement;
  const form = document.getElementById('address-form') as HTMLFormElement;
  const modalTitle = document.getElementById('modal-title') as HTMLElement;
  const closeModalBtn = document.getElementById('close-modal-btn') as HTMLButtonElement;
  const cancelBtn = document.getElementById('cancel-btn') as HTMLButtonElement;
  const errorMsg = document.getElementById('form-error') as HTMLParagraphElement;
  const submitBtn = document.getElementById('submit-btn') as HTMLButtonElement;
  const cityWrapper = document.getElementById('city-wrapper') as HTMLElement;
  const citySearchInput = document.getElementById('city-search') as HTMLInputElement;
  const cityHiddenInput = document.getElementById('destination') as HTMLInputElement;
  const cityResultsContainer = document.getElementById('city-results') as HTMLElement;
  
  let currentMode = 'add';
  let addressIdToEdit: string | null = null;
  let debounceTimer: number;

  // --- Logika Tampil/Sembunyi Modal ---
  const showModal = () => modal.classList.remove('hidden');
  const hideModal = () => {
      modal.classList.add('hidden');
      form.reset();
      errorMsg.textContent = '';
      cityResultsContainer.classList.add('hidden');
      cityResultsContainer.innerHTML = '';
  };
  closeModalBtn.addEventListener('click', hideModal);
  cancelBtn.addEventListener('click', hideModal);

  // --- Logika Pencarian Kota (RajaOngkir) ---
  function debounce(func: (...args: any[]) => void, delay = 500) {
    return (...args: any[]) => {
      clearTimeout(debounceTimer);
      debounceTimer = window.setTimeout(() => {
        func.apply(this, args);
      }, delay);
    };
  }
  
  const searchCities = async (query: string) => {
    // ... (Logika searchCities tetap sama, tidak perlu diubah) ...
    cityResultsContainer.innerHTML = '<div class="p-2 text-gray-500">Mencari...</div>';
    cityResultsContainer.classList.remove('hidden');
    try {
      const response = await fetch(`/api/rajaongkir/search-city?query=${encodeURIComponent(query)}`);
      if (!response.ok) throw new Error('Gagal mencari kota.');
      const results = await response.json();
      cityResultsContainer.innerHTML = '';
      if (results.length === 0) {
        cityResultsContainer.innerHTML = '<div class="p-2 text-gray-500">Tidak ditemukan.</div>';
        return;
      }
      results.forEach(city => {
        const resultItem = document.createElement('div');
        resultItem.className = 'cursor-pointer p-2 hover:bg-orange-100';
        const mainText = `${city.subdistrict_name}, ${city.district_name}`;
        const subText = `${city.city_name}, ${city.province_name}, ${city.zip_code}`;
        const fullText = `${mainText}, ${subText}`;
        resultItem.dataset.value = city.subdistrict_id;
        resultItem.dataset.text = fullText;
        resultItem.dataset.postalCode = city.zip_code;
        resultItem.innerHTML = `<div class="font-semibold text-gray-800">${mainText}</div><div class="text-xs text-gray-500">${subText}</div>`;
        cityResultsContainer.appendChild(resultItem);
      });
    } catch (error) {
      console.error(error);
      cityResultsContainer.innerHTML = `<div class="p-2 text-red-500">${(error as Error).message}</div>`;
    }
  };

  citySearchInput.addEventListener('input', debounce((e: Event) => {
    const query = (e.target as HTMLInputElement).value;
    if (query.length < 3) {
      cityResultsContainer.classList.add('hidden');
      cityResultsContainer.innerHTML = '';
      cityHiddenInput.value = '';
      return;
    }
    searchCities(query);
  }));

  cityResultsContainer.addEventListener('click', (e) => {
    const target = (e.target as HTMLElement).closest('[data-value]') as HTMLElement | null;
    if (target) {
      citySearchInput.value = target.dataset.text || '';
      cityHiddenInput.value = target.dataset.value || '';
      if (target.dataset.postalCode) {
        (form.elements.namedItem('postal_code') as HTMLInputElement).value = target.dataset.postalCode;
      }
      cityResultsContainer.classList.add('hidden');
    }
  });

  document.addEventListener('click', (e) => {
      if (!cityWrapper.contains(e.target as Node)) {
          cityResultsContainer.classList.add('hidden');
      }
  });

  // --- Logika Pengisian Form (Edit Mode) ---
  document.addEventListener('showAddressForm', (e: Event) => {
      const { mode, address } = (e as CustomEvent).detail;
      currentMode = mode;
      form.reset();
      
      if (mode === 'edit') {
          modalTitle.textContent = 'Ubah Alamat';
          addressIdToEdit = address.id;
          // ... (logika pengisian form edit mode tetap sama) ...
          (form.elements.namedItem('label') as HTMLInputElement).value = address.label || '';
          (form.elements.namedItem('recipient_name') as HTMLInputElement).value = address.recipient_name || '';
          (form.elements.namedItem('recipient_phone') as HTMLInputElement).value = address.recipient_phone || '';
          (form.elements.namedItem('full_address') as HTMLInputElement).value = address.full_address || '';
          (form.elements.namedItem('postal_code') as HTMLInputElement).value = address.postal_code || '';
          citySearchInput.placeholder = "Ketik untuk mencari kota/kecamatan baru";
          citySearchInput.value = address.destination_text || '';
          cityHiddenInput.value = address.destination || '';
      } else {
          modalTitle.textContent = 'Tambah Alamat Baru';
          addressIdToEdit = null;
      }
      showModal();
  });

  // --- Logika Submit Form ---
  form.addEventListener('submit', async (e) => {
    e.preventDefault();
    errorMsg.textContent = '';
    submitBtn.disabled = true;
    submitBtn.textContent = 'Menyimpan...';

    const formData = new FormData(form);
    const data = Object.fromEntries(formData.entries());

    // Validasi Sederhana
    if (!data.destination) {
      errorMsg.textContent = 'Kota/Kabupaten/Kecamatan harus dipilih dari hasil pencarian.';
      submitBtn.disabled = false;
      submitBtn.textContent = 'Simpan Alamat';
      return;
    }

    try {
      // ==================================================================
      // == REFACTOR NANO STORES: Langkah 2                            ==
      // == Ganti fetch manual dengan memanggil aksi 'addAddress'.       ==
      // == Aksi ini akan menangani API call dan update state global.  ==
      // ==================================================================
      if (currentMode === 'add') {
        // Hapus 'id' jika ada, karena ini data baru
        delete data.id; 
        await addAddress(data as any); // Tipe 'any' untuk Omit<Address, ...>
      } else if (currentMode === 'edit') {
        // TODO: Implementasi fungsi updateAddress di store.
        // await updateAddress(addressIdToEdit, data);
        console.warn("Fungsi update address belum diimplementasikan di store.");
        // Untuk sementara, kita bisa panggil addAddress, tapi idealnya updateAddress
      }

      hideModal();
      // Tidak perlu dispatchEvent('addressSaved') lagi.

    } catch (error) {
      errorMsg.textContent = (error as Error).message;
    } finally {
      submitBtn.disabled = false;
      submitBtn.textContent = 'Simpan Alamat';
    }
  });
</script>